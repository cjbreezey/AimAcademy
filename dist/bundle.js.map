{"version":3,"sources":["webpack:///./src/index.js"],"names":[],"mappings":"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","file":"./bundle.js","sourcesContent":["// modal start button\nconst start_btn = document.getElementById('startBtn')\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    start_btn.addEventListener(\"click\", () => {\n        document.getElementById(\"modal\").classList.add(\"hidden\")\n    })\n})\n\n// Variables\nlet gameCanvas = new canvas();\nlet cursor = new mouse();\n\n// Setup\ngameCanvas.setSize(innerWidth, innerHeight);\n\n// Run it !\nrun();\n\n// Global Class\nfunction canvas() {\n\n    // Canvas\n    this.canvas = document.querySelector('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.centerLeft;\n    this.centerTop;\n\n    // Cursor\n    this.cursorX = -50;\n    this.cursorY = -50;\n    this.cursorSound = [];\n\n    // Game Settings\n    this.currentView = \"menu\";\n    this.mode;\n\n    // Listener\n    this.canvas.addEventListener('mousemove', function (e) {\n\n        this.boundingClientRect = this.getBoundingClientRect();\n        gameCanvas.cursorX = e.clientX - this.boundingClientRect.left;\n        return gameCanvas.cursorY = e.clientY - this.boundingClientRect.top;\n\n    })\n    this.canvas.addEventListener('mousedown', function () {\n\n        // Shoot Sound\n        gameCanvas.cursorSound.push(new sound());\n        gameCanvas.cursorSound[gameCanvas.cursorSound.length - 1].play();\n\n        // Menu Event\n        if (gameCanvas.currentView === \"menu\") {\n\n            // Target Mode Icon\n            if (gameCanvas.cursorX > gameCanvas.centerLeft - 75\n                && gameCanvas.cursorX < gameCanvas.centerLeft + 75\n                && gameCanvas.cursorY > gameCanvas.centerTop - 50\n                && gameCanvas.cursorY < gameCanvas.centerTop + 100) {\n\n                gameCanvas.mode = new survivalMode();\n                return gameCanvas.currentView = \"survivalMode\";\n\n            }\n\n            // God Mode Icon\n            if (gameCanvas.cursorX > gameCanvas.centerLeft + 100\n                && gameCanvas.cursorX < gameCanvas.centerLeft + 250\n                && gameCanvas.cursorY > gameCanvas.centerTop - 50\n                && gameCanvas.cursorY < gameCanvas.centerTop + 100) {\n                gameCanvas.mode = new godMode();\n                return gameCanvas.currentView = \"godMode\";\n\n            }\n\n            // Timed Mode Icon\n            if (gameCanvas.cursorX > gameCanvas.centerLeft - 250\n                && gameCanvas.cursorX < gameCanvas.centerLeft - 100\n                && gameCanvas.cursorY > gameCanvas.centerTop - 50\n                && gameCanvas.cursorY < gameCanvas.centerTop + 100) {\n\n                gameCanvas.mode = new timedMode();\n                return gameCanvas.currentView = \"timedMode\";\n            }\n            \n\n        }\n\n        if (gameCanvas.currentView === \"survivalMode\") {\n\n            gameCanvas.mode.shootFail += 1;\n\n            gameCanvas.mode.targets.find(function (e, index) {\n\n                this.dx = gameCanvas.cursorX - e.x;\n                this.dy = gameCanvas.cursorY - e.y;\n                this.dist = Math.abs(Math.sqrt(this.dx * this.dx + this.dy * this.dy));\n\n                if (this.dist <= e.size) {\n\n                    gameCanvas.mode.shootFail -= 1;\n                    gameCanvas.mode.score += 1;\n                    return gameCanvas.mode.targets.splice(index, 1);\n\n                }\n\n            })\n\n        }\n\n        if (gameCanvas.currentView === \"godMode\") {\n\n            gameCanvas.mode.shootFail += 1;\n\n            gameCanvas.mode.targets.find(function (e, index) {\n\n                this.dx = gameCanvas.cursorX - e.x;\n                this.dy = gameCanvas.cursorY - e.y;\n                this.dist = Math.abs(Math.sqrt(this.dx * this.dx + this.dy * this.dy));\n\n                if (this.dist <= e.size) {\n\n                    gameCanvas.mode.shootFail -= 1;\n                    gameCanvas.mode.score += 1;\n                    return gameCanvas.mode.targets.splice(index, 1);\n\n                }\n\n            })\n\n        }\n\n        if (gameCanvas.currentView === \"timedMode\") {\n\n            gameCanvas.mode.shootFail += 1;\n\n            gameCanvas.mode.targets.find(function (e, index) {\n\n                this.dx = gameCanvas.cursorX - e.x;\n                this.dy = gameCanvas.cursorY - e.y;\n                this.dist = Math.abs(Math.sqrt(this.dx * this.dx + this.dy * this.dy));\n\n                if (this.dist <= e.size) {\n\n                    gameCanvas.mode.shootFail -= 1;\n                    gameCanvas.mode.score += 1;\n                    return gameCanvas.mode.targets.splice(index, 1);\n\n                }\n\n            })\n\n        }\n\n        setTimeout(function () {\n\n            gameCanvas.cursorSound.splice(gameCanvas.cursorSound[gameCanvas.cursorSound.length - 1], 1);\n\n        }, 2000);\n\n    })\n    document.addEventListener('keydown', function (e) {\n\n        if (e.code === \"Escape\") {\n\n            gameCanvas.mode = null;\n            return gameCanvas.currentView = \"menu\";\n\n        }\n\n    })\n\n    this.setSize = function (x, y) {\n\n        this.canvas.width = x;\n        this.canvas.height = y;\n        this.centerLeft = this.canvas.width / 2;\n        return this.centerTop = this.canvas.height / 2;\n\n    }\n\n    this.clear = function () {\n\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    }\n\n    this.controller = function () {\n\n        if (this.currentView === \"menu\") {\n\n        }\n\n        if (this.currentView === \"survivalMode\") {\n\n            if (this.mode.life <= 0) {\n\n            }\n\n            this.mode.addTarget();\n\n        }\n\n        if (this.currentView === \"godMode\") {\n\n            if (this.mode.life <= 0) {\n\n            }\n\n            this.mode.addTarget();\n\n        }\n\n        if (this.currentView === \"timedMode\") {\n\n            if (this.mode.timer <= 0) {\n\n            }\n            // this.mode.time()\n            this.mode.addTarget();\n\n        }\n\n        return this.view(this.currentView);\n\n    }\n\n    this.view = function (type) {\n\n        this.clear();\n        // setInterval(this.time, 1000)\n\n        if (type === \"menu\") {\n\n            this.ctx.fillStyle = \"#000\";\n            this.ctx.textAlign = \"center\";\n            this.ctx.textBaseline = \"center\";\n            this.ctx.font = \"50px Open Sans\";\n            this.ctx.fillText('AIM ACADEMY', this.centerLeft, this.centerTop - 150);\n\n            // social images\n            let img1 = document.getElementById(\"github\");\n            let img2 = document.getElementById(\"linkedin\")\n            this.ctx.drawImage(img1, this.centerLeft + 10, this.centerTop + 125, 60, 60)\n            this.ctx.drawImage(img2, this.centerLeft - 70, this.centerTop + 125, 60, 60)\n\n            // time mode\n            this.ctx.fillStyle = \"#fff\";\n            this.ctx.fillRect(this.centerLeft - 250, this.centerTop - 50, 150, 150);\n            // survival mode\n            this.ctx.fillStyle = \"#fff\";\n            this.ctx.fillRect(this.centerLeft - 75, this.centerTop - 50, 150, 150);\n            // god mode\n            this.ctx.fillStyle = \"#fff\";\n            this.ctx.fillRect(this.centerLeft + 100, this.centerTop - 50, 150, 150);\n\n            // Timed Mode box\n\n            gameCanvas.ctx.fillStyle = \"#c8c8c8\";\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft - 45, this.centerTop - 20, 10, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft - 25, this.centerTop + 20, 20, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft - 25, this.centerTop + 50, 5, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft - 45, this.centerTop + 70, 10, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft + 5, this.centerTop + 60, 10, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft + 35, this.centerTop, 15, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft + 30, this.centerTop + 50, 20, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.fillStyle = \"#e40700\";\n            gameCanvas.ctx.textAlign = \"center\";\n            gameCanvas.ctx.textBaseline = \"center\";\n            gameCanvas.ctx.font = \"24px Open Sans\";\n            gameCanvas.ctx.fillText(\"Survival Mode\", this.centerLeft, this.centerTop + 40);\n\n            // infinity mode box\n\n            gameCanvas.ctx.fillStyle = \"#c8c8c8\";\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft - 220, this.centerTop - 20, 10, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft - 200, this.centerTop + 20, 20, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft - 200, this.centerTop + 50, 5, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft - 220, this.centerTop + 70, 10, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft - 170, this.centerTop + 60, 10, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft - 135, this.centerTop, 15, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft - 140, this.centerTop + 50, 20, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.fillStyle = \"#e40700\";\n            gameCanvas.ctx.textAlign = \"center\";\n            gameCanvas.ctx.textBaseline = \"center\";\n            gameCanvas.ctx.font = \"26px Open Sans\";\n            gameCanvas.ctx.fillText(\"Timed Mode\", this.centerLeft - 175, this.centerTop + 40);\n            \n            // God Mode Box\n\n            gameCanvas.ctx.fillStyle = \"#c8c8c8\";\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft + 220, this.centerTop - 20, 10, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft + 200, this.centerTop + 20, 20, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft + 200, this.centerTop + 50, 5, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft + 220, this.centerTop + 70, 10, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft + 170, this.centerTop + 60, 10, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft + 135, this.centerTop, 15, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.beginPath();\n            gameCanvas.ctx.arc(this.centerLeft + 140, this.centerTop + 50, 20, 0, 2 * Math.PI);\n            gameCanvas.ctx.closePath();\n            gameCanvas.ctx.fill();\n\n            gameCanvas.ctx.fillStyle = \"#e40700\";\n            gameCanvas.ctx.textAlign = \"center\";\n            gameCanvas.ctx.textBaseline = \"center\";\n            gameCanvas.ctx.font = \"26px Open Sans\";\n            gameCanvas.ctx.fillText(\"God Mode\", this.centerLeft + 175, this.centerTop + 40);\n\n\n        } else if (type === \"survivalMode\") {\n\n            if (this.mode.life === 0) {\n\n                gameCanvas.ctx.fillStyle = \"white\";\n                gameCanvas.ctx.textAlign = \"center\";\n                gameCanvas.ctx.textBaseline = \"center\";\n                gameCanvas.ctx.font = \"50px Open Sans\";\n                gameCanvas.ctx.fillText(\"Game Over\", this.centerLeft, this.centerTop - 80);\n                gameCanvas.ctx.font = \"30px Open Sans\";\n                gameCanvas.ctx.fillText(\"Score : \" + this.mode.score, this.centerLeft, this.centerTop - 40);\n                gameCanvas.ctx.fillText(\"Press ESCAPE\", this.centerLeft, this.centerTop + 120);\n\n            } else {\n\n                this.ctx.fillStyle = \"white\";\n                this.ctx.textAlign = \"center\";\n                this.ctx.textBaseline = \"center\";\n                this.ctx.font = \"80px Open Sans\";\n                this.ctx.fillText('♥'.repeat(this.mode.life), this.centerLeft, this.centerTop - 40);\n\n                gameCanvas.ctx.font = \"30px Open Sans\";\n                gameCanvas.ctx.fillText(\"Score : \" + this.mode.score, this.centerLeft, this.centerTop);\n                gameCanvas.ctx.fillText(\"Miss : \" + this.mode.shootFail, this.centerLeft, this.centerTop + 40);\n\n                this.mode.getTargets();\n\n            }\n\n        } else if (type === \"godMode\") {\n\n            if (this.mode.life === 0) {\n\n                gameCanvas.ctx.fillStyle = \"white\";\n                gameCanvas.ctx.textAlign = \"center\";\n                gameCanvas.ctx.textBaseline = \"center\";\n                gameCanvas.ctx.font = \"50px Open Sans\";\n                gameCanvas.ctx.fillText(\"Game Over\", this.centerLeft, this.centerTop - 80);\n                gameCanvas.ctx.font = \"30px Open Sans\";\n                gameCanvas.ctx.fillText(\"Score : \" + this.mode.score, this.centerLeft, this.centerTop - 40);\n                gameCanvas.ctx.fillText(\"Press ESCAPE\", this.centerLeft, this.centerTop + 120);\n\n            } else {\n\n                this.ctx.fillStyle = \"white\";\n                this.ctx.textAlign = \"center\";\n                this.ctx.textBaseline = \"center\";\n                this.ctx.font = \"80px Open Sans\";\n                this.ctx.fillText('♥'.repeat(this.mode.life), this.centerLeft, this.centerTop - 40);\n\n                gameCanvas.ctx.font = \"30px Open Sans\";\n                gameCanvas.ctx.fillText(\"Score : \" + this.mode.score, this.centerLeft, this.centerTop);\n                gameCanvas.ctx.fillText(\"Miss : \" + this.mode.shootFail, this.centerLeft, this.centerTop + 40);\n\n                this.mode.getTargets();\n\n            }\n\n        } else if (type === \"timedMode\") {\n\n            if (this.mode.timer === 0) {\n\n                gameCanvas.ctx.fillStyle = \"white\";\n                gameCanvas.ctx.textAlign = \"center\";\n                gameCanvas.ctx.textBaseline = \"center\";\n                gameCanvas.ctx.font = \"50px Open Sans\";\n                gameCanvas.ctx.fillText(\"Game Over\", this.centerLeft, this.centerTop - 80);\n                gameCanvas.ctx.font = \"30px Open Sans\";\n                gameCanvas.ctx.fillText(\"Score : \" + this.mode.score, this.centerLeft, this.centerTop - 40);\n                gameCanvas.ctx.fillText(\"Press ESCAPE\", this.centerLeft, this.centerTop + 120);\n\n            } else {\n\n                gameCanvas.ctx.fillStyle = \"white\";\n                gameCanvas.ctx.textAlign = \"center\";\n                gameCanvas.ctx.textBaseline = \"center\";\n                gameCanvas.ctx.font = \"30px Open Sans\";\n                gameCanvas.ctx.fillText(\"Time : \" + this.mode.timer, this.centerLeft, this.centerTop - 40);\n                gameCanvas.ctx.fillText(\"Score : \" + this.mode.score, this.centerLeft, this.centerTop);\n                gameCanvas.ctx.fillText(\"Miss : \" + this.mode.shootFail, this.centerLeft, this.centerTop + 40);\n\n                this.mode.time();\n                this.mode.getTargets();\n\n            }\n\n        }\n\n        // return cursor.show();\n\n    }\n\n}\n\nfunction mouse() {\n\n    let crosshair = document.querySelector('canvas')\n    crosshair.onmouseover = function() {\n        this.style.cursor = \"crosshair\"\n    }\n\n}\n\n// Game Mode\nfunction timedMode() {\n\n    this.score = 0;\n    this.shootFail = 0;\n    this.targets = [];\n    this.timer = 6000 // Ms\n    this.targetsMaxSize = 50; // Unity : Pixel\n    this.targetsRapidity = 0.2; // Unity : Pixel\n    this.targetsTime = 500 - (this.score * 5); // Unity : Mills\n    this.targetsLastAdd = Date.now();\n\n    this.time = function () {\n        if (this.timer > 0) {\n            this.timer--\n        }\n    }\n\n    this.addTarget = function () {\n\n        if (this.targets.length < 10 && Date.now() > this.targetsLastAdd + this.targetsTime) {\n\n            this.targets.push(new target());\n            return this.targetsLastAdd = Date.now();\n\n        }\n\n    }\n\n    this.getTargets = function () {\n\n        this.targets.forEach(function (value, index) {\n\n            if (value.reset === true && value.size <= 0) {\n\n                gameCanvas.mode.targets.splice(index, 1);\n                return gameCanvas.mode.life -= 1;\n\n            }\n\n            return value.draw();\n\n        });\n\n    }\n\n}\n\nfunction survivalMode() {\n\n    this.life = 3;\n    this.score = 0;\n    this.shootFail = 0;\n    this.targets = [];\n    this.targetsMaxSize = 50; // Unity : Pixel\n    this.targetsRapidity = 0.35; // Unity : Pixel\n    this.targetsTime = 1000 - (this.score * 5); // Unity : Mills\n    this.targetsLastAdd = Date.now();\n\n    this.addTarget = function () {\n\n        if (this.targets.length < 5 && Date.now() > this.targetsLastAdd + this.targetsTime) {\n\n            this.targets.push(new target());\n            return this.targetsLastAdd = Date.now();\n\n        }\n\n    }\n\n    this.getTargets = function () {\n\n        this.targets.forEach(function (value, index) {\n\n            if (value.reset === true && value.size <= 0) {\n\n                gameCanvas.mode.targets.splice(index, 1);\n                return gameCanvas.mode.life -= 1;\n\n            }\n\n            return value.draw();\n\n        });\n\n    }\n\n}\n\nfunction godMode() {\n\n    this.life = 3;\n    this.score = 0;\n    this.shootFail = 0;\n    this.targets = [];\n    this.targetsMaxSize = 35; // Unity : Pixel\n    this.targetsRapidity = 0.35; // Unity : Pixel\n    this.targetsTime = 500 - (this.score * 5); // Unity : Mills\n    this.targetsLastAdd = Date.now();\n\n    this.addTarget = function () {\n\n        if (this.targets.length < 10 && Date.now() > this.targetsLastAdd + this.targetsTime) {\n\n            this.targets.push(new target());\n            return this.targetsLastAdd = Date.now();\n\n        }\n\n    }\n\n    this.getTargets = function () {\n\n        this.targets.forEach(function (value, index) {\n\n            if (value.reset === true && value.size <= 0) {\n\n                gameCanvas.mode.targets.splice(index, 1);\n                return gameCanvas.mode.life -= 1;\n\n            }\n\n            return value.draw();\n\n        });\n\n    }\n\n}\n\nfunction target() {\n\n    this.x = rand(gameCanvas.mode.targetsMaxSize, gameCanvas.canvas.width - gameCanvas.mode.targetsMaxSize);\n    this.y = rand(gameCanvas.mode.targetsMaxSize, gameCanvas.canvas.height - gameCanvas.mode.targetsMaxSize);\n    this.size = 0;\n    this.reset = false;\n\n    this.draw = function () {\n\n        if (this.size < gameCanvas.mode.targetsMaxSize && this.reset === false) {\n\n            this.size += gameCanvas.mode.targetsRapidity;\n\n        } else {\n\n            this.reset = true;\n\n            if (this.size - gameCanvas.mode.targetsRapidity < 0) {\n                return this.size = 0;\n            }\n\n            this.size -= gameCanvas.mode.targetsRapidity;\n\n        }\n\n        gameCanvas.ctx.fillStyle = \"red\";\n        gameCanvas.ctx.beginPath();\n        gameCanvas.ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);\n        gameCanvas.ctx.closePath();\n        gameCanvas.ctx.fill();\n\n    }\n\n}\n\n\n// Functions\n\nfunction rand(min, max) {\n\n    return Math.round(Math.random() * (max - min) + min);\n\n}\nfunction sound() {\n\n    this.sound = document.createElement(\"audio\");\n    this.sound.src = \"shoot.mp3\";\n    this.sound.setAttribute(\"preload\", \"auto\");\n\n    this.play = function () {\n\n        this.sound.play();\n\n    }\n\n}\nfunction run() {\n\n    gameCanvas.controller();\n    window.requestAnimationFrame(run);\n\n}"],"sourceRoot":""}