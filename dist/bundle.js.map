{"version":3,"sources":["webpack:///./src/index.js"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,EAAE,IAAI,EAAE,IAAI,EAAE;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI","file":"./bundle.js","sourcesContent":["const modal = document.getElementById('modal')\nconst modal_btn = document.getElementById('modal-btn');\nconst start_btn = document.getElementById('startBtn')\nconst canvas = document.querySelector('canvas'),\n        canvasLeft = canvas.offsetLeft,\n        canvasTop = canvas.offsetTop,\n        ctx = canvas.getContext('2d'),\n        circles = [];\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    start_btn.addEventListener(\"click\", () => {\n        document.getElementById(\"modal\").classList.add(\"hidden\")\n        modal.style.display = \"none\"\n    })\n\n    modal_btn.onclick = function () {\n        modal.style.display = \"block\"\n    }\n})\n\ncanvas.width = innerWidth\ncanvas.height = innerHeight\n\nvar Circle = function(x, y, radius, color) {\n    this.x = x\n    this.y = y\n    this.radius = radius\n    this.color = color\n}\n\nCircle.prototype.isHitBy = function(x, y) {\n    var distance = Math.sqrt(Math.pow(x - this.x, 2) + Math.pow(y - this.y, 2))\n    return distance <= this.radius;\n}\n\nvar circle = new Circle(150, 150, 35, \"red\");\n\nctx.beginPath();\nctx.arc(circle.x, circle.y, circle.radius, 0, Math.PI * 2, false)\nctx.fillStyle = circle.color\nctx.fill();\nctx.closePath()\n\ncanvas.addEventListener('click', function(e) {\n    var canvasBounds = canvas.getBoundingClientRect();\n\n    var clickX = e.pageX - canvasBounds.left;\n    var clickY = e.pageY - canvasBounds.top;\n\n    if (circle.isHitBy(clickX, clickY)) {\n        // console.log('hit')\n        this.remove()\n    }\n\n})\n\n// class movingTarget {\n//     constructor(x, y, radius, color, velocity) {\n//         this.x = x\n//         this.y = y\n//         this.radius = radius\n//         this.color = color\n//         this.velocity = velocity\n//     }\n\n//     draw(ctx) {\n//         ctx.beginPath();\n//         ctx.lineWidth = 3;\n//         ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n//         ctx.stroke();\n//         ctx.fillStyle = this.color\n//         ctx.fill()\n//         ctx.closePath();\n//     }\n\n// }\n\n// const target = new movingTarget(100, 100, 30, \"red\")\n// target.draw(ctx)\n\n// const hitCanvas = document.querySelector('canvas')\n// const hitCtx = hitCanvas.getContext('2d')\n\n// const colorsHash = {};\n\n// function getRandomColor() {\n//     const r = Math.round(Math.random() * 255)\n//     const g = Math.round(Math.random() * 255)\n//     const b = Math.round(Math.random() * 255)\n//     return `rgb(${r}, ${g}, ${b})`;\n// }\n\n// canvas.addEventListener('click', (e) => {\n//     const pos = {\n//         x: e.clientX,\n//         y: e.clientY\n//     };\n//     if (isIntersect(mousePoint, target)) {\n//         console.log('go')\n//     }\n// })\n\n"],"sourceRoot":""}